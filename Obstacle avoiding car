#include <AF Motor.h>
#include <NewPing.h>**
#include <Servo.h>

#define TRIG_PIN A0**
#define ECHO_PIN A1
#define MAX_DISTANCE 200
#define MAX_SPEED 190
#define MAX_SPEED_OFFSET 20

NewPing Sonar (TRIG_PIN, ECHO_PIN, MAX_DISTANCE);
AF_DCMotor motor 1 (1, MOTOR12_1KHZ);
AF_DCMotor  motor 2 (2, MOTOR12_1KHZ);
AF_DCMotor  motor 3  (3, MOTOR34_1KHZ);
AF_DCMotor  motor 4 (4, MOTOR34_1KHZ);

Servo myservo; 
  boolean goesForward=false;
  int distance =100;
   int speed set =0;
   
 void setup()
{
  myservo.attach(10);
  myservo.write(115); 
  delay(200);
  distance=readping();
  delay(100);
  distance=readping();
  delay(100);
  distance=readping();
  delay(100);
  distance=readping();
  delay(100);
}
 void loop()
{
  int distance R=0;

  int distance L=0;
  
  delay(40);
   if(distance<=15)
    {
       move stop();
       delay(100);
          move backward();
         delay(300);
        move stop();
       delay(200);
       distance R= look Right();
       delay(200);
       distance L= look Left();
       delay(200);
 if (distance R>= distance L)
{
   turn Right();
   move Stop();
}
else
{
  tun Left();
  move Stop();
}
else{
move Forward();
}
distance =readPing();
}
int lookRight()
{
  myservo.write(50);
  delay(500);
   int distance =readPing();
delay(100);
   
  myservo.write(115);
  return distance;
}
 int lookLeft()
{
  myservo.write(170);
  delay(500);
   int distance =readPing();
   delay(100);
  myservo.write(115);
  return distance;
delay(100);
}
 int readPing()
{ 
delay(70);
int cm=sonar.ping_cm();
if(cm==0)
{
 cm=250;
}
return cm;
}  
void move Stop()
{
  motor1.run(RELEASE); 
  
  motor2.run(RELEASE); 
  
  motor3.run(RELEASE); 

  motor4.run(RELEASE); 
}

void moveForward()
{
   if (!goesForward)
   {
      goesForward= ture;
      motor1.run(FORWARD); 
  
  motor2.run(FORWARD); 
  
  motor3.run(FORWARD); 

  motor4.run(FORWARD); 
   for(speedSet=0;speedSet<MAX_SPEED; speedSet++)******************
{ 
   motor1.setSpeed(speedSet);
   motor2.setSpeed(speedSet);
   motor3.setSpeed(speedSet);
   motor4.setSpeed(speedSet);
   delay(5);
}
}
}
void moveBackward()
{
  goesForward= false;
      motor1.run(BACKWARD); 
  
  motor2.run(BACKWARD); 
  
  motor3.run(BACKWARD); 

  motor4.run(BACKWARD); 
   for(speedSet=0;speedSet<MAX_SPEED; speedSet+=2)**********************
{ 
   motor1.setSpeed(speedSet);
   motor2.setSpeed(speedSet);
   motor3.setSpeed(speedSet);
   motor4.setSpeed(speedSet);
   delay(5);
  }
}
void turnRight()
{
motor1.run(FORWARD); 
  
  motor2.run(FORWARD); 
  
  motor3.run(BACKWARD); 

  motor4.run(BACKWARD); 
  delay(500);
  
  motor1.run(FORWARD); 
  
  motor2.run(FORWARD); 
  
  motor3.run(FORWARD); 

  motor4.run(FORWARD); 
  
}

void turnLeft()
{
motor3.run(FORWARD); 
  
  motor4.run(FORWARD); 
  
  motor1.run(BACKWARD); 

  motor2.run(BACKWARD); 
  delay(500);
  
  motor1.run(FORWARD); 
  
  motor2.run(FORWARD); 
  
  motor3.run(FORWARD); 

  motor4.run(FORWARD); 
  
}      


     
  
  

